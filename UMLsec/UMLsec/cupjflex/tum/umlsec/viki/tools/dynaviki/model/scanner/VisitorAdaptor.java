/*
 * Generated by classgen, version 1.3
 * 15/01/04 14:52
 */
package tum.umlsec.viki.tools.dynaviki.model.scanner;

public abstract class VisitorAdaptor implements Visitor {

  public void visit(USE_FunctionCall uSE_FunctionCall) { visit(); }
  public void visit(USE_Assignment uSE_Assignment) { visit(); }
  public void visit(USE_BASE uSE_BASE) { visit(); }
  public void visit(USE_EffectBase uSE_EffectBase) { visit(); }
  public void visit(USE_EffectList uSE_EffectList) { visit(); }
  public void visit(USE_GuardVirt uSE_GuardVirt) { visit(); }
  public void visit(USE_Guard uSE_Guard) { visit(); }
  public void visit(USE_GuardElse uSE_GuardElse) { visit(); }
  public void visit(USE_CompareOperator uSE_CompareOperator) { visit(); }
  public void visit(USE_CompareOperatorEqual uSE_CompareOperatorEqual) { visit(); }
  public void visit(USE_CompareOperatorNotEqual uSE_CompareOperatorNotEqual) { visit(); }
  public void visit(USE_ParameterList uSE_ParameterList) { visit(); }
  public void visit(USE_ParameterListCont uSE_ParameterListCont) { visit(); }
  public void visit(USE_ParameterListEnd uSE_ParameterListEnd) { visit(); }
  public void visit(USE_RTerm uSE_RTerm) { visit(); }
  public void visit(USE_Concatenation uSE_Concatenation) { visit(); }
  public void visit(USE_Select uSE_Select) { visit(); }
  public void visit(USE_Variable uSE_Variable) { visit(); }
  public void visit(USE_ApplyKey uSE_ApplyKey) { visit(); }
  public void visit(USE_SenderOf uSE_SenderOf) { visit(); }
  public void visit(USE_PublicKeyOf uSE_PublicKeyOf) { visit(); }
  public void visit(USE_SecretKeyOf uSE_SecretKeyOf) { visit(); }
  public void visit(USE_SymmetricKeyOf uSE_SymmetricKeyOf) { visit(); }
  public void visit(USE_NonceOf uSE_NonceOf) { visit(); }
  public void visit(USE_This uSE_This) { visit(); }

  public void visit() { }

}
