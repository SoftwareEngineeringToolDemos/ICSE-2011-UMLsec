/*
 * Generated by classgen, version 1.3
 * 15/01/04 14:52
 */
package tum.umlsec.viki.tools.dynaviki.model.scanner;

public class USE_EffectList extends USE_EffectBase {

  private USE_EffectBase effect1;
  private USE_EffectBase effect2;

  public USE_EffectList (USE_EffectBase effect1, USE_EffectBase effect2) {
    this.effect1 = effect1;
    if (effect1 != null) effect1.setParent(this);
    this.effect2 = effect2;
    if (effect2 != null) effect2.setParent(this);
  }

  public USE_EffectBase getEffect1() {
    return effect1;
  }

  public void setEffect1(USE_EffectBase effect1) {
    this.effect1 = effect1;
  }

  public USE_EffectBase getEffect2() {
    return effect2;
  }

  public void setEffect2(USE_EffectBase effect2) {
    this.effect2 = effect2;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (effect1 != null) effect1.accept(visitor);
    if (effect2 != null) effect2.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (effect1 != null) effect1.traverseTopDown(visitor);
    if (effect2 != null) effect2.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (effect1 != null) effect1.traverseBottomUp(visitor);
    if (effect2 != null) effect2.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("USE_EffectList(\n");
      if (effect1 != null)
        buffer.append(effect1.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (effect2 != null)
        buffer.append(effect2.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [USE_EffectList]");
    return buffer.toString();
  }
}
