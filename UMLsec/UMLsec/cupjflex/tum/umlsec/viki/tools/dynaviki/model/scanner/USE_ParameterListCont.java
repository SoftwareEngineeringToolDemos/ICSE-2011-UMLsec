/*
 * Generated by classgen, version 1.3
 * 15/01/04 14:52
 */
package tum.umlsec.viki.tools.dynaviki.model.scanner;

public class USE_ParameterListCont extends USE_ParameterList {

  private USE_RTerm param;
  private USE_ParameterList paramList;

  public USE_ParameterListCont (USE_RTerm param, USE_ParameterList paramList) {
    this.param = param;
    if (param != null) param.setParent(this);
    this.paramList = paramList;
    if (paramList != null) paramList.setParent(this);
  }

  public USE_RTerm getParam() {
    return param;
  }

  public void setParam(USE_RTerm param) {
    this.param = param;
  }

  public USE_ParameterList getParamList() {
    return paramList;
  }

  public void setParamList(USE_ParameterList paramList) {
    this.paramList = paramList;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (param != null) param.accept(visitor);
    if (paramList != null) paramList.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (param != null) param.traverseTopDown(visitor);
    if (paramList != null) paramList.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (param != null) param.traverseBottomUp(visitor);
    if (paramList != null) paramList.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("USE_ParameterListCont(\n");
      if (param != null)
        buffer.append(param.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (paramList != null)
        buffer.append(paramList.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [USE_ParameterListCont]");
    return buffer.toString();
  }
}
