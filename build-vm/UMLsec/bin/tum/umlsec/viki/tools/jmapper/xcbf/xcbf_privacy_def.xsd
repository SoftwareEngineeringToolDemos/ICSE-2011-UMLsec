<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="./xcbf_global.xsd" />
	<xs:include schemaLocation="./xcbf.xsd" />
	<xs:element name="privacyObjects">
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
					an encrypted set of biometric values
				</xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element name="biometricHeaders" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="biometricHeader" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element ref="privacyBlock"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="privacyBlock">
		<xs:complexType>
			<xs:choice>
				<xs:annotation>
						<xs:documentation>
						assumes that the reciepient of the EncryptedData value knows the key used to encrypt the biometric information
						</xs:documentation>
					</xs:annotation>
				<xs:element name="fixedKey">
					<xs:complexType><!-- EncryptedData -->
						<xs:sequence>
							<xs:element name="version" type="xs:int" default="84"/>
							<xs:element ref="encryptedContentInfo"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="namedKey">
					<xs:complexType><!-- NamedKeyEncryptedData -->
						<xs:annotation>
							<xs:documentation>
								the receipient does not know the key used to encrypt the biometric information a priori,
								therefore a Identifier for the used key is transmitted
							</xs:documentation>
						</xs:annotation>
						<xs:sequence>
							<!--<xs:element name="keyName" type="xs:hexBinary"/>-->
							<xs:element name="keyName" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										Contains data of type xs:hexBinary
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="encryptedData">
								<xs:complexType><!-- EncryptedData -->
									<xs:sequence>
										<xs:element name="version" type="xs:int" default="84"/>
										<xs:element ref="encryptedContentInfo"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="establishedKey">
					<xs:complexType><!-- Enveloped Data -->
						<xs:annotation>
							<xs:documentation>
								the key for decrypting the biometric information is on his part encrypted with the 
								recipients public key 
							</xs:documentation>
						</xs:annotation>
						<xs:sequence>
							<xs:element name="version" type="xs:int" default="84"/>
							<xs:element ref="originatorInfo" minOccurs="0"/>
							<xs:element ref="recipientInfos"/>
							<xs:element ref="encryptedContentInfo"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="encryptedContentInfo">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="contentType" type="xs:string"/>
				<xs:element name="contentEncryptionAlgorithm" type="AlgorithmIdentifier"/>
				<!--<xs:element name="encryptedContent" type="xs:hexBinary"/>-->
				<xs:element name="encryptedContent" type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Contains data of type xs:hexBinary
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="originatorInfo">
		<xs:complexType>
			<xs:sequence>
				<!--<xs:element name="certificates" type="xs:hexBinary" minOccurs="0"/>
				<xs:element name="crls" type="xs:hexBinary" minOccurs="0"/>-->
				<xs:element name="certificates" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
							Contains data of type xs:hexBinary
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="crls" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>
							Contains data of type xs:hexBinary
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
