
%------------------------ Asymmetrical Encryption -------------------------

input_formula(enc_equation,axiom,(
! [E1,E2] :
( ( knows(enc(E1, E2))
  & knows(inv(E2)) )
 => knows(E1) ) )).

%---------------------- Symmetrical Encryption -----------------------------

input_formula(symenc_equation,axiom,(
! [E1,E2] :
( ( knows(symenc(E1, E2))
  & knows(E2) )
 => knows(E1) ) )).

%--------------------------- Signature -------------------------------------

input_formula(sign_equation,axiom,(
! [E,K] :
( ( knows(sign(E, inv(K) ) )
  & knows(K) )
 => knows(E) ) )).

input_formula(symsign_equation,axiom,(
! [E,K] :
( ( knows(symsign(E, K))
  & knows(K) )
 => knows(E) ) )).

%---- Basic Relations on Knowledge where conc, enc, symenc and sign is included ----

input_formula(construct_message_1,axiom,(
! [E1,E2] :
( ( knows(E1)
  & knows(E2) )
=> ( knows(conc(E1, E2))
   & knows(enc(E1, E2))
   & knows(symenc(E1, E2))
   & knows(sign(E1, E2))
   & knows(symsign(E1, E2)) ) ) )).

input_formula(construct_message_2,axiom,(
! [E1,E2] :
( ( knows(conc(E1, E2)) )
=> ( knows(E1)
  & knows(E2) ) ) )).

%---- Basic Relations on Knowledge where head, tail and hash is included ----

input_formula(construct_message_3,axiom,(
! [E] :
( knows(E)
=> ( knows(head(E))
   & knows(tail(E))
   & knows(hash(E)) ) ) )).

%--------------------------- decryption, signature verifikation -----------------

input_formula(dec_axiom,axiom,(
! [E,K] :
( equal( dec(enc(E, K), inv(K)), E ) ) )).

input_formula(symdec_axiom,axiom,(
! [E,K] :
( equal( symdec(symenc(E, K), K), E ) ) )).

input_formula(sign_axiom,axiom,(
! [E,K] :
( equal( ext(sign(E, inv(K)), K), E ) ) )).

%--------------------------- head, tail -------------------------------------

input_formula(head_axiom,axiom,(
! [X,Y] :
( equal( head(conc(X,Y)), X ) ) )).

input_formula(tail_axiom,axiom,(
! [X,Y] :
( equal( tail(conc(X,Y)), Y ) ) )).

%--------------------------- fst, snd, thd, frth -------------------------------------

input_formula(fst_axiom,axiom,(
! [X] :
( equal( fst(X), head(X) ) ) )).

input_formula(snd_axiom,axiom,(
! [X] :
( equal( snd(X), head(tail(X)) ) ) )).

input_formula(thd_axiom,axiom,(
! [X] :
( equal( trd(X), head(tail(tail(X))) ) ) )).

input_formula(frth_axiom,axiom,(
! [X] :
( equal( frth(X), head(tail(tail(tail(X)))) ) ) )).

%----------------------- Main Protocol Specification ---------------------------

input_formula(protocol,axiom,(
