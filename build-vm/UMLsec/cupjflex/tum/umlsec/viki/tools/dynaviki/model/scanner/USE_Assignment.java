/*
 * Generated by classgen, version 1.3
 * 15/01/04 14:52
 */
package tum.umlsec.viki.tools.dynaviki.model.scanner;

public class USE_Assignment extends USE_EffectBase implements SyntaxNode {

  private SyntaxNode parent;
  private USE_Variable variable;
  private USE_RTerm value;

  public USE_Assignment (USE_Variable variable, USE_RTerm value) {
    this.variable = variable;
    if (variable != null) variable.setParent(this);
    this.value = value;
    if (value != null) value.setParent(this);
  }

  public USE_Variable getVariable() {
    return variable;
  }

  public void setVariable(USE_Variable variable) {
    this.variable = variable;
  }

  public USE_RTerm getValue() {
    return value;
  }

  public void setValue(USE_RTerm value) {
    this.value = value;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (variable != null) variable.accept(visitor);
    if (value != null) value.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (variable != null) variable.traverseTopDown(visitor);
    if (value != null) value.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (variable != null) variable.traverseBottomUp(visitor);
    if (value != null) value.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("USE_Assignment(\n");
      if (variable != null)
        buffer.append(variable.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (value != null)
        buffer.append(value.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [USE_Assignment]");
    return buffer.toString();
  }
}
